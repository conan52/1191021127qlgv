#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _1191021127.QuanLyGiaoVien.Domain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyGiaoVien")]
	public partial class DBStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBoMon(BoMon instance);
    partial void UpdateBoMon(BoMon instance);
    partial void DeleteBoMon(BoMon instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertChiTietChucVuGV(ChiTietChucVuGV instance);
    partial void UpdateChiTietChucVuGV(ChiTietChucVuGV instance);
    partial void DeleteChiTietChucVuGV(ChiTietChucVuGV instance);
    partial void InsertChucDanh(ChucDanh instance);
    partial void UpdateChucDanh(ChucDanh instance);
    partial void DeleteChucDanh(ChucDanh instance);
    partial void InsertChucDanh_GiaoVien(ChucDanh_GiaoVien instance);
    partial void UpdateChucDanh_GiaoVien(ChucDanh_GiaoVien instance);
    partial void DeleteChucDanh_GiaoVien(ChucDanh_GiaoVien instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNhomUser(NhomUser instance);
    partial void UpdateNhomUser(NhomUser instance);
    partial void DeleteNhomUser(NhomUser instance);
    partial void InsertPhanCongGiaoVien(PhanCongGiaoVien instance);
    partial void UpdatePhanCongGiaoVien(PhanCongGiaoVien instance);
    partial void DeletePhanCongGiaoVien(PhanCongGiaoVien instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    #endregion
		
		public DBStoreDataContext() : 
				base(global::_1191021127.QuanLyGiaoVien.Domain.Properties.Settings.Default.QuanLyGiaoVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BoMon> BoMons
		{
			get
			{
				return this.GetTable<BoMon>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietChucVuGV> ChiTietChucVuGVs
		{
			get
			{
				return this.GetTable<ChiTietChucVuGV>();
			}
		}
		
		public System.Data.Linq.Table<ChucDanh> ChucDanhs
		{
			get
			{
				return this.GetTable<ChucDanh>();
			}
		}
		
		public System.Data.Linq.Table<ChucDanh_GiaoVien> ChucDanh_GiaoViens
		{
			get
			{
				return this.GetTable<ChucDanh_GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<NhomUser> NhomUsers
		{
			get
			{
				return this.GetTable<NhomUser>();
			}
		}
		
		public System.Data.Linq.Table<PhanCongGiaoVien> PhanCongGiaoViens
		{
			get
			{
				return this.GetTable<PhanCongGiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoMon")]
	public partial class BoMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaBoMon;
		
		private string _TenBoMon;
		
		private System.Nullable<long> _MaKhoa;
		
		private string _TrungTamDaoTao;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<MonHoc> _MonHocs;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBoMonChanging(long value);
    partial void OnMaBoMonChanged();
    partial void OnTenBoMonChanging(string value);
    partial void OnTenBoMonChanged();
    partial void OnMaKhoaChanging(System.Nullable<long> value);
    partial void OnMaKhoaChanged();
    partial void OnTrungTamDaoTaoChanging(string value);
    partial void OnTrungTamDaoTaoChanged();
    #endregion
		
		public BoMon()
		{
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._MonHocs = new EntitySet<MonHoc>(new Action<MonHoc>(this.attach_MonHocs), new Action<MonHoc>(this.detach_MonHocs));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBoMon", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaBoMon
		{
			get
			{
				return this._MaBoMon;
			}
			set
			{
				if ((this._MaBoMon != value))
				{
					this.OnMaBoMonChanging(value);
					this.SendPropertyChanging();
					this._MaBoMon = value;
					this.SendPropertyChanged("MaBoMon");
					this.OnMaBoMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBoMon", DbType="NVarChar(50)")]
		public string TenBoMon
		{
			get
			{
				return this._TenBoMon;
			}
			set
			{
				if ((this._TenBoMon != value))
				{
					this.OnTenBoMonChanging(value);
					this.SendPropertyChanging();
					this._TenBoMon = value;
					this.SendPropertyChanged("TenBoMon");
					this.OnTenBoMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="BigInt")]
		public System.Nullable<long> MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrungTamDaoTao", DbType="NVarChar(50)")]
		public string TrungTamDaoTao
		{
			get
			{
				return this._TrungTamDaoTao;
			}
			set
			{
				if ((this._TrungTamDaoTao != value))
				{
					this.OnTrungTamDaoTaoChanging(value);
					this.SendPropertyChanging();
					this._TrungTamDaoTao = value;
					this.SendPropertyChanged("TrungTamDaoTao");
					this.OnTrungTamDaoTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_GiaoViens", ThisKey="MaBoMon", OtherKey="MaBoMon")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_MonHoc", Storage="_MonHocs", ThisKey="MaBoMon", OtherKey="MaBoMon")]
		public EntitySet<MonHoc> MonHocs
		{
			get
			{
				return this._MonHocs;
			}
			set
			{
				this._MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_BoMon", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.BoMons.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.BoMons.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(Nullable<long>);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
		
		private void attach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<long> _MaNhom;
		
		private string _Email;
		
		private System.Nullable<long> _SoDienThoai;
		
		private EntityRef<NhomUser> _NhomUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaNhomChanging(System.Nullable<long> value);
    partial void OnMaNhomChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(System.Nullable<long> value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public User()
		{
			this._NhomUser = default(EntityRef<NhomUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="BigInt")]
		public System.Nullable<long> MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NhomUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="BigInt")]
		public System.Nullable<long> SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomUser_User", Storage="_NhomUser", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomUser NhomUser
		{
			get
			{
				return this._NhomUser.Entity;
			}
			set
			{
				NhomUser previousValue = this._NhomUser.Entity;
				if (((previousValue != value) 
							|| (this._NhomUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomUser.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._NhomUser.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(Nullable<long>);
					}
					this.SendPropertyChanged("NhomUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietChucVuGV")]
	public partial class ChiTietChucVuGV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaGV;
		
		private long _MaChucVu;
		
		private string _GhiChu;
		
		private EntityRef<ChucVu> _ChucVu;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(long value);
    partial void OnMaGVChanged();
    partial void OnMaChucVuChanging(long value);
    partial void OnMaChucVuChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ChiTietChucVuGV()
		{
			this._ChucVu = default(EntityRef<ChucVu>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucVu", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MaChucVu
		{
			get
			{
				return this._MaChucVu;
			}
			set
			{
				if ((this._MaChucVu != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaChucVu = value;
					this.SendPropertyChanged("MaChucVu");
					this.OnMaChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_ChiTietChucVuGV", Storage="_ChucVu", ThisKey="MaChucVu", OtherKey="MaChucVu", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.ChiTietChucVuGVs.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.ChiTietChucVuGVs.Add(this);
						this._MaChucVu = value.MaChucVu;
					}
					else
					{
						this._MaChucVu = default(long);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChiTietChucVuGV", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ChiTietChucVuGVs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ChiTietChucVuGVs.Add(this);
						this._MaGV = value.MaGiaoVien;
					}
					else
					{
						this._MaGV = default(long);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucDanh")]
	public partial class ChucDanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaChucDanh;
		
		private string _TenChucDanh;
		
		private string _LoaiChucDanh;
		
		private System.Nullable<double> _HeSoLuong;
		
		private EntitySet<ChucDanh_GiaoVien> _ChucDanh_GiaoViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucDanhChanging(long value);
    partial void OnMaChucDanhChanged();
    partial void OnTenChucDanhChanging(string value);
    partial void OnTenChucDanhChanged();
    partial void OnLoaiChucDanhChanging(string value);
    partial void OnLoaiChucDanhChanged();
    partial void OnHeSoLuongChanging(System.Nullable<double> value);
    partial void OnHeSoLuongChanged();
    #endregion
		
		public ChucDanh()
		{
			this._ChucDanh_GiaoViens = new EntitySet<ChucDanh_GiaoVien>(new Action<ChucDanh_GiaoVien>(this.attach_ChucDanh_GiaoViens), new Action<ChucDanh_GiaoVien>(this.detach_ChucDanh_GiaoViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucDanh", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaChucDanh
		{
			get
			{
				return this._MaChucDanh;
			}
			set
			{
				if ((this._MaChucDanh != value))
				{
					this.OnMaChucDanhChanging(value);
					this.SendPropertyChanging();
					this._MaChucDanh = value;
					this.SendPropertyChanged("MaChucDanh");
					this.OnMaChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucDanh", DbType="NVarChar(50)")]
		public string TenChucDanh
		{
			get
			{
				return this._TenChucDanh;
			}
			set
			{
				if ((this._TenChucDanh != value))
				{
					this.OnTenChucDanhChanging(value);
					this.SendPropertyChanging();
					this._TenChucDanh = value;
					this.SendPropertyChanged("TenChucDanh");
					this.OnTenChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiChucDanh", DbType="NVarChar(50)")]
		public string LoaiChucDanh
		{
			get
			{
				return this._LoaiChucDanh;
			}
			set
			{
				if ((this._LoaiChucDanh != value))
				{
					this.OnLoaiChucDanhChanging(value);
					this.SendPropertyChanging();
					this._LoaiChucDanh = value;
					this.SendPropertyChanged("LoaiChucDanh");
					this.OnLoaiChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Float")]
		public System.Nullable<double> HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucDanh_ChucDanh_GiaoVien", Storage="_ChucDanh_GiaoViens", ThisKey="MaChucDanh", OtherKey="MaChucDanh")]
		public EntitySet<ChucDanh_GiaoVien> ChucDanh_GiaoViens
		{
			get
			{
				return this._ChucDanh_GiaoViens;
			}
			set
			{
				this._ChucDanh_GiaoViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChucDanh_GiaoViens(ChucDanh_GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucDanh = this;
		}
		
		private void detach_ChucDanh_GiaoViens(ChucDanh_GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucDanh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucDanh_GiaoVien")]
	public partial class ChucDanh_GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaGiaoVien;
		
		private long _MaChucDanh;
		
		private string _GhiChu;
		
		private EntityRef<ChucDanh> _ChucDanh;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(long value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaChucDanhChanging(long value);
    partial void OnMaChucDanhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ChucDanh_GiaoVien()
		{
			this._ChucDanh = default(EntityRef<ChucDanh>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucDanh", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MaChucDanh
		{
			get
			{
				return this._MaChucDanh;
			}
			set
			{
				if ((this._MaChucDanh != value))
				{
					if (this._ChucDanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChucDanhChanging(value);
					this.SendPropertyChanging();
					this._MaChucDanh = value;
					this.SendPropertyChanged("MaChucDanh");
					this.OnMaChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucDanh_ChucDanh_GiaoVien", Storage="_ChucDanh", ThisKey="MaChucDanh", OtherKey="MaChucDanh", IsForeignKey=true)]
		public ChucDanh ChucDanh
		{
			get
			{
				return this._ChucDanh.Entity;
			}
			set
			{
				ChucDanh previousValue = this._ChucDanh.Entity;
				if (((previousValue != value) 
							|| (this._ChucDanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucDanh.Entity = null;
						previousValue.ChucDanh_GiaoViens.Remove(this);
					}
					this._ChucDanh.Entity = value;
					if ((value != null))
					{
						value.ChucDanh_GiaoViens.Add(this);
						this._MaChucDanh = value.MaChucDanh;
					}
					else
					{
						this._MaChucDanh = default(long);
					}
					this.SendPropertyChanged("ChucDanh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChucDanh_GiaoVien", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ChucDanh_GiaoViens.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ChucDanh_GiaoViens.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(long);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaChucVu;
		
		private string _TenChucVu;
		
		private EntitySet<ChiTietChucVuGV> _ChiTietChucVuGVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChucVuChanging(long value);
    partial void OnMaChucVuChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    #endregion
		
		public ChucVu()
		{
			this._ChiTietChucVuGVs = new EntitySet<ChiTietChucVuGV>(new Action<ChiTietChucVuGV>(this.attach_ChiTietChucVuGVs), new Action<ChiTietChucVuGV>(this.detach_ChiTietChucVuGVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucVu", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaChucVu
		{
			get
			{
				return this._MaChucVu;
			}
			set
			{
				if ((this._MaChucVu != value))
				{
					this.OnMaChucVuChanging(value);
					this.SendPropertyChanging();
					this._MaChucVu = value;
					this.SendPropertyChanged("MaChucVu");
					this.OnMaChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(50)")]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_ChiTietChucVuGV", Storage="_ChiTietChucVuGVs", ThisKey="MaChucVu", OtherKey="MaChucVu")]
		public EntitySet<ChiTietChucVuGV> ChiTietChucVuGVs
		{
			get
			{
				return this._ChiTietChucVuGVs;
			}
			set
			{
				this._ChiTietChucVuGVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietChucVuGVs(ChiTietChucVuGV entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_ChiTietChucVuGVs(ChiTietChucVuGV entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaGiaoVien;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Email;
		
		private System.Nullable<long> _SoDienThoai;
		
		private System.Nullable<long> _MaChucDanh;
		
		private System.Nullable<double> _LuongCoBan;
		
		private System.Nullable<long> _MaBoMon;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietChucVuGV> _ChiTietChucVuGVs;
		
		private EntitySet<ChucDanh_GiaoVien> _ChucDanh_GiaoViens;
		
		private EntitySet<PhanCongGiaoVien> _PhanCongGiaoViens;
		
		private EntityRef<BoMon> _BoMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(long value);
    partial void OnMaGiaoVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(System.Nullable<long> value);
    partial void OnSoDienThoaiChanged();
    partial void OnMaChucDanhChanging(System.Nullable<long> value);
    partial void OnMaChucDanhChanged();
    partial void OnLuongCoBanChanging(System.Nullable<double> value);
    partial void OnLuongCoBanChanged();
    partial void OnMaBoMonChanging(System.Nullable<long> value);
    partial void OnMaBoMonChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public GiaoVien()
		{
			this._ChiTietChucVuGVs = new EntitySet<ChiTietChucVuGV>(new Action<ChiTietChucVuGV>(this.attach_ChiTietChucVuGVs), new Action<ChiTietChucVuGV>(this.detach_ChiTietChucVuGVs));
			this._ChucDanh_GiaoViens = new EntitySet<ChucDanh_GiaoVien>(new Action<ChucDanh_GiaoVien>(this.attach_ChucDanh_GiaoViens), new Action<ChucDanh_GiaoVien>(this.detach_ChucDanh_GiaoViens));
			this._PhanCongGiaoViens = new EntitySet<PhanCongGiaoVien>(new Action<PhanCongGiaoVien>(this.attach_PhanCongGiaoViens), new Action<PhanCongGiaoVien>(this.detach_PhanCongGiaoViens));
			this._BoMon = default(EntityRef<BoMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="BigInt")]
		public System.Nullable<long> SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChucDanh", DbType="BigInt")]
		public System.Nullable<long> MaChucDanh
		{
			get
			{
				return this._MaChucDanh;
			}
			set
			{
				if ((this._MaChucDanh != value))
				{
					this.OnMaChucDanhChanging(value);
					this.SendPropertyChanging();
					this._MaChucDanh = value;
					this.SendPropertyChanged("MaChucDanh");
					this.OnMaChucDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCoBan", DbType="Float")]
		public System.Nullable<double> LuongCoBan
		{
			get
			{
				return this._LuongCoBan;
			}
			set
			{
				if ((this._LuongCoBan != value))
				{
					this.OnLuongCoBanChanging(value);
					this.SendPropertyChanging();
					this._LuongCoBan = value;
					this.SendPropertyChanged("LuongCoBan");
					this.OnLuongCoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBoMon", DbType="BigInt")]
		public System.Nullable<long> MaBoMon
		{
			get
			{
				return this._MaBoMon;
			}
			set
			{
				if ((this._MaBoMon != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBoMonChanging(value);
					this.SendPropertyChanging();
					this._MaBoMon = value;
					this.SendPropertyChanged("MaBoMon");
					this.OnMaBoMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChiTietChucVuGV", Storage="_ChiTietChucVuGVs", ThisKey="MaGiaoVien", OtherKey="MaGV")]
		public EntitySet<ChiTietChucVuGV> ChiTietChucVuGVs
		{
			get
			{
				return this._ChiTietChucVuGVs;
			}
			set
			{
				this._ChiTietChucVuGVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChucDanh_GiaoVien", Storage="_ChucDanh_GiaoViens", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<ChucDanh_GiaoVien> ChucDanh_GiaoViens
		{
			get
			{
				return this._ChucDanh_GiaoViens;
			}
			set
			{
				this._ChucDanh_GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCongGiaoVien", Storage="_PhanCongGiaoViens", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<PhanCongGiaoVien> PhanCongGiaoViens
		{
			get
			{
				return this._PhanCongGiaoViens;
			}
			set
			{
				this._PhanCongGiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_BoMon", ThisKey="MaBoMon", OtherKey="MaBoMon", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaBoMon = value.MaBoMon;
					}
					else
					{
						this._MaBoMon = default(Nullable<long>);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietChucVuGVs(ChiTietChucVuGV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_ChiTietChucVuGVs(ChiTietChucVuGV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_ChucDanh_GiaoViens(ChucDanh_GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_ChucDanh_GiaoViens(ChucDanh_GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<BoMon> _BoMons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(long value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._BoMons = new EntitySet<BoMon>(new Action<BoMon>(this.attach_BoMons), new Action<BoMon>(this.detach_BoMons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_BoMon", Storage="_BoMons", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<BoMon> BoMons
		{
			get
			{
				return this._BoMons;
			}
			set
			{
				this._BoMons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BoMons(BoMon entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_BoMons(BoMon entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaLopHoc;
		
		private string _TenLopHoc;
		
		private System.Nullable<int> _SiSo;
		
		private EntitySet<PhanCongGiaoVien> _PhanCongGiaoViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopHocChanging(long value);
    partial void OnMaLopHocChanged();
    partial void OnTenLopHocChanging(string value);
    partial void OnTenLopHocChanged();
    partial void OnSiSoChanging(System.Nullable<int> value);
    partial void OnSiSoChanged();
    #endregion
		
		public LopHoc()
		{
			this._PhanCongGiaoViens = new EntitySet<PhanCongGiaoVien>(new Action<PhanCongGiaoVien>(this.attach_PhanCongGiaoViens), new Action<PhanCongGiaoVien>(this.detach_PhanCongGiaoViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopHoc", DbType="NVarChar(50)")]
		public string TenLopHoc
		{
			get
			{
				return this._TenLopHoc;
			}
			set
			{
				if ((this._TenLopHoc != value))
				{
					this.OnTenLopHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopHoc = value;
					this.SendPropertyChanged("TenLopHoc");
					this.OnTenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int")]
		public System.Nullable<int> SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_PhanCongGiaoVien", Storage="_PhanCongGiaoViens", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<PhanCongGiaoVien> PhanCongGiaoViens
		{
			get
			{
				return this._PhanCongGiaoViens;
			}
			set
			{
				this._PhanCongGiaoViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaMonHoc;
		
		private string _TenMonHoc;
		
		private System.Nullable<int> _SoTietLyThuyet;
		
		private System.Nullable<int> _SoTietThucHanh;
		
		private System.Nullable<int> _SoTinChi;
		
		private string _LoaiMonHoc;
		
		private System.Nullable<long> _MaBoMon;
		
		private EntitySet<PhanCongGiaoVien> _PhanCongGiaoViens;
		
		private EntityRef<BoMon> _BoMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonHocChanging(long value);
    partial void OnMaMonHocChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    partial void OnSoTietLyThuyetChanging(System.Nullable<int> value);
    partial void OnSoTietLyThuyetChanged();
    partial void OnSoTietThucHanhChanging(System.Nullable<int> value);
    partial void OnSoTietThucHanhChanged();
    partial void OnSoTinChiChanging(System.Nullable<int> value);
    partial void OnSoTinChiChanged();
    partial void OnLoaiMonHocChanging(string value);
    partial void OnLoaiMonHocChanged();
    partial void OnMaBoMonChanging(System.Nullable<long> value);
    partial void OnMaBoMonChanged();
    #endregion
		
		public MonHoc()
		{
			this._PhanCongGiaoViens = new EntitySet<PhanCongGiaoVien>(new Action<PhanCongGiaoVien>(this.attach_PhanCongGiaoViens), new Action<PhanCongGiaoVien>(this.detach_PhanCongGiaoViens));
			this._BoMon = default(EntityRef<BoMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(50)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTietLyThuyet", DbType="Int")]
		public System.Nullable<int> SoTietLyThuyet
		{
			get
			{
				return this._SoTietLyThuyet;
			}
			set
			{
				if ((this._SoTietLyThuyet != value))
				{
					this.OnSoTietLyThuyetChanging(value);
					this.SendPropertyChanging();
					this._SoTietLyThuyet = value;
					this.SendPropertyChanged("SoTietLyThuyet");
					this.OnSoTietLyThuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTietThucHanh", DbType="Int")]
		public System.Nullable<int> SoTietThucHanh
		{
			get
			{
				return this._SoTietThucHanh;
			}
			set
			{
				if ((this._SoTietThucHanh != value))
				{
					this.OnSoTietThucHanhChanging(value);
					this.SendPropertyChanging();
					this._SoTietThucHanh = value;
					this.SendPropertyChanged("SoTietThucHanh");
					this.OnSoTietThucHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChi", DbType="Int")]
		public System.Nullable<int> SoTinChi
		{
			get
			{
				return this._SoTinChi;
			}
			set
			{
				if ((this._SoTinChi != value))
				{
					this.OnSoTinChiChanging(value);
					this.SendPropertyChanging();
					this._SoTinChi = value;
					this.SendPropertyChanged("SoTinChi");
					this.OnSoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiMonHoc", DbType="NVarChar(50)")]
		public string LoaiMonHoc
		{
			get
			{
				return this._LoaiMonHoc;
			}
			set
			{
				if ((this._LoaiMonHoc != value))
				{
					this.OnLoaiMonHocChanging(value);
					this.SendPropertyChanging();
					this._LoaiMonHoc = value;
					this.SendPropertyChanged("LoaiMonHoc");
					this.OnLoaiMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBoMon", DbType="BigInt")]
		public System.Nullable<long> MaBoMon
		{
			get
			{
				return this._MaBoMon;
			}
			set
			{
				if ((this._MaBoMon != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBoMonChanging(value);
					this.SendPropertyChanging();
					this._MaBoMon = value;
					this.SendPropertyChanged("MaBoMon");
					this.OnMaBoMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCongGiaoVien", Storage="_PhanCongGiaoViens", ThisKey="MaMonHoc", OtherKey="MaMonHoc")]
		public EntitySet<PhanCongGiaoVien> PhanCongGiaoViens
		{
			get
			{
				return this._PhanCongGiaoViens;
			}
			set
			{
				this._PhanCongGiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_MonHoc", Storage="_BoMon", ThisKey="MaBoMon", OtherKey="MaBoMon", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.MonHocs.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.MonHocs.Add(this);
						this._MaBoMon = value.MaBoMon;
					}
					else
					{
						this._MaBoMon = default(Nullable<long>);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomUser")]
	public partial class NhomUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaNhom;
		
		private string _TenNhom;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(long value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public NhomUser()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomUser_User", Storage="_Users", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.NhomUser = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.NhomUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCongGiaoVien")]
	public partial class PhanCongGiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaPhanCong;
		
		private long _MaGiaoVien;
		
		private long _MaLopHoc;
		
		private long _MaMonHoc;
		
		private long _MaPhongBan;
		
		private System.Nullable<int> _TietDay;
		
		private System.Nullable<int> _PhanCong;
		
		private string _HocKy;
		
		private System.Nullable<int> _NamHoc;
		
		private System.Nullable<int> _SoTietDay;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<LopHoc> _LopHoc;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanCongChanging(long value);
    partial void OnMaPhanCongChanged();
    partial void OnMaGiaoVienChanging(long value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaLopHocChanging(long value);
    partial void OnMaLopHocChanged();
    partial void OnMaMonHocChanging(long value);
    partial void OnMaMonHocChanged();
    partial void OnMaPhongBanChanging(long value);
    partial void OnMaPhongBanChanged();
    partial void OnTietDayChanging(System.Nullable<int> value);
    partial void OnTietDayChanged();
    partial void OnPhanCongChanging(System.Nullable<int> value);
    partial void OnPhanCongChanged();
    partial void OnHocKyChanging(string value);
    partial void OnHocKyChanged();
    partial void OnNamHocChanging(System.Nullable<int> value);
    partial void OnNamHocChanged();
    partial void OnSoTietDayChanging(System.Nullable<int> value);
    partial void OnSoTietDayChanged();
    #endregion
		
		public PhanCongGiaoVien()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._LopHoc = default(EntityRef<LopHoc>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhanCong", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MaPhanCong
		{
			get
			{
				return this._MaPhanCong;
			}
			set
			{
				if ((this._MaPhanCong != value))
				{
					this.OnMaPhanCongChanging(value);
					this.SendPropertyChanging();
					this._MaPhanCong = value;
					this.SendPropertyChanged("MaPhanCong");
					this.OnMaPhanCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="BigInt NOT NULL")]
		public long MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="BigInt NOT NULL")]
		public long MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonHoc", DbType="BigInt NOT NULL")]
		public long MaMonHoc
		{
			get
			{
				return this._MaMonHoc;
			}
			set
			{
				if ((this._MaMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonHocChanging(value);
					this.SendPropertyChanging();
					this._MaMonHoc = value;
					this.SendPropertyChanged("MaMonHoc");
					this.OnMaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongBan", DbType="BigInt NOT NULL")]
		public long MaPhongBan
		{
			get
			{
				return this._MaPhongBan;
			}
			set
			{
				if ((this._MaPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongBanChanging(value);
					this.SendPropertyChanging();
					this._MaPhongBan = value;
					this.SendPropertyChanged("MaPhongBan");
					this.OnMaPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietDay", DbType="Int")]
		public System.Nullable<int> TietDay
		{
			get
			{
				return this._TietDay;
			}
			set
			{
				if ((this._TietDay != value))
				{
					this.OnTietDayChanging(value);
					this.SendPropertyChanging();
					this._TietDay = value;
					this.SendPropertyChanged("TietDay");
					this.OnTietDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanCong", DbType="Int")]
		public System.Nullable<int> PhanCong
		{
			get
			{
				return this._PhanCong;
			}
			set
			{
				if ((this._PhanCong != value))
				{
					this.OnPhanCongChanging(value);
					this.SendPropertyChanging();
					this._PhanCong = value;
					this.SendPropertyChanged("PhanCong");
					this.OnPhanCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="NVarChar(50)")]
		public string HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int")]
		public System.Nullable<int> NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTietDay", DbType="Int")]
		public System.Nullable<int> SoTietDay
		{
			get
			{
				return this._SoTietDay;
			}
			set
			{
				if ((this._SoTietDay != value))
				{
					this.OnSoTietDayChanging(value);
					this.SendPropertyChanging();
					this._SoTietDay = value;
					this.SendPropertyChanged("SoTietDay");
					this.OnSoTietDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_PhanCongGiaoVien", Storage="_GiaoVien", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.PhanCongGiaoViens.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiaoViens.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(long);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_PhanCongGiaoVien", Storage="_LopHoc", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.PhanCongGiaoViens.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiaoViens.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(long);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_PhanCongGiaoVien", Storage="_MonHoc", ThisKey="MaMonHoc", OtherKey="MaMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.PhanCongGiaoViens.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiaoViens.Add(this);
						this._MaMonHoc = value.MaMonHoc;
					}
					else
					{
						this._MaMonHoc = default(long);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_PhanCongGiaoVien", Storage="_PhongBan", ThisKey="MaPhongBan", OtherKey="MaPhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.PhanCongGiaoViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiaoViens.Add(this);
						this._MaPhongBan = value.MaPhongBan;
					}
					else
					{
						this._MaPhongBan = default(long);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MaPhongBan;
		
		private string _TenPhongBan;
		
		private EntitySet<PhanCongGiaoVien> _PhanCongGiaoViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongBanChanging(long value);
    partial void OnMaPhongBanChanged();
    partial void OnTenPhongBanChanging(string value);
    partial void OnTenPhongBanChanged();
    #endregion
		
		public PhongBan()
		{
			this._PhanCongGiaoViens = new EntitySet<PhanCongGiaoVien>(new Action<PhanCongGiaoVien>(this.attach_PhanCongGiaoViens), new Action<PhanCongGiaoVien>(this.detach_PhanCongGiaoViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhongBan", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MaPhongBan
		{
			get
			{
				return this._MaPhongBan;
			}
			set
			{
				if ((this._MaPhongBan != value))
				{
					this.OnMaPhongBanChanging(value);
					this.SendPropertyChanging();
					this._MaPhongBan = value;
					this.SendPropertyChanged("MaPhongBan");
					this.OnMaPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongBan", DbType="NVarChar(50)")]
		public string TenPhongBan
		{
			get
			{
				return this._TenPhongBan;
			}
			set
			{
				if ((this._TenPhongBan != value))
				{
					this.OnTenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._TenPhongBan = value;
					this.SendPropertyChanged("TenPhongBan");
					this.OnTenPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_PhanCongGiaoVien", Storage="_PhanCongGiaoViens", ThisKey="MaPhongBan", OtherKey="MaPhongBan")]
		public EntitySet<PhanCongGiaoVien> PhanCongGiaoViens
		{
			get
			{
				return this._PhanCongGiaoViens;
			}
			set
			{
				this._PhanCongGiaoViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_PhanCongGiaoViens(PhanCongGiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
}
#pragma warning restore 1591
